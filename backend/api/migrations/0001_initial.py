# Generated by Django 5.2 on 2025-04-09 11:53

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Utilisateur",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("client", "Client"),
                            ("admin", "Admin"),
                            ("caissier", "Caissier"),
                        ],
                        default="client",
                        max_length=20,
                    ),
                ),
                ("photo", models.ImageField(blank=True, null=True, upload_to="photos")),
                ("cin", models.ImageField(blank=True, null=True, upload_to="CIN")),
                ("date_inscription", models.DateTimeField(auto_now_add=True)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "Utilisateur",
                "verbose_name_plural": "Utilisateurs",
                "ordering": ["-date_inscription"],
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="CompteBancaire",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "numero_compte",
                    models.CharField(blank=True, max_length=20, null=True, unique=True),
                ),
                (
                    "type_compte",
                    models.CharField(
                        choices=[
                            ("courant", "Compte courant"),
                            ("epargne", "Compte épargne"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "attestation_emploi",
                    models.FileField(blank=True, null=True, upload_to="attestations"),
                ),
                (
                    "solde",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=10),
                ),
                ("date_ouverture", models.DateTimeField(auto_now_add=True)),
                (
                    "utilisateur",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="comptes",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Compte Bancaire",
                "verbose_name_plural": "Comptes Bancaires",
            },
        ),
        migrations.CreateModel(
            name="Pret",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("motif", models.CharField(max_length=100)),
                ("montant", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "statut",
                    models.CharField(
                        choices=[
                            ("en_cours", "En cours"),
                            ("rembourse", "Remboursé"),
                            ("rejeté", "Rejeté"),
                            ("en_attente", "En attente"),
                        ],
                        default="en_attente",
                        max_length=20,
                    ),
                ),
                ("date_demande", models.DateTimeField(auto_now_add=True)),
                ("date_remboursement", models.DateTimeField(blank=True, null=True)),
                (
                    "compte",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="prets",
                        to="api.comptebancaire",
                    ),
                ),
            ],
            options={
                "verbose_name": "Prêt",
                "verbose_name_plural": "Prêts",
            },
        ),
        migrations.CreateModel(
            name="Transaction",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("depot", "Dépôt"),
                            ("retrait", "Retrait"),
                            ("transfert", "Transfert"),
                            ("pret", "Prêt"),
                        ],
                        max_length=20,
                    ),
                ),
                ("montant", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "status",
                    models.CharField(
                        choices=[("succès", "Succès"), ("échoué", "Échoué")],
                        max_length=10,
                    ),
                ),
                ("date_transaction", models.DateTimeField(auto_now_add=True)),
                (
                    "compte_destination",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="transactions_destination",
                        to="api.comptebancaire",
                    ),
                ),
                (
                    "compte_source",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="transactions_source",
                        to="api.comptebancaire",
                    ),
                ),
            ],
            options={
                "verbose_name": "Transaction",
                "verbose_name_plural": "Transactions",
            },
        ),
    ]
